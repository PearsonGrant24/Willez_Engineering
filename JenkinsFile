pipeline {
    agent any
    
    stages { 

        stage("Build"){
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }

            }
            steps {
                sh '''     
                    export NPM_CONFIG_CACHE=$PWD/.npm-cache
                    mkdir -p $NPM_CONFIG_CACHE

                    ls -la
                    node --version
                    npm --version
                    npm ci --verbose
                    npm run build
                    ls -la
                '''
            }
        }

        stage('Tests') {
            parallel {
                agent {
                    docker {
                        image 'node:18-alpine'
                        reuseNode true
                    }
                }

                steps {
                    sh '''
                        test -f build/index.html
                        npm test 
                    '''
                }
            }

            stage('E2E') {
                agent {
                    docker {
                        image 'mcr.microsoft.com/playerright:v1.39.0-jammy'
                        reuseNode true
                    }
                }

                steps {
                    sh '''
                        npm install serve
                        node_modules/.bin/serve -s build & sleep 10 
                        npx playwright test --reporter=html
                    '''
                }
                post {
                    always {
                        publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                    }
                }                
            }
        }
    }    
}