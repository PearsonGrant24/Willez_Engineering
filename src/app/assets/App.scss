
// /-----------------NAV -----------------------------------------------------

/* Navbar fixed and transparent at top */
// .hero {
//   min-height: 90vh;
//   background: url('https://cdn.prod.website-files.com/64c6e4021257dfdf4b2f57d1/65a9564ee64da3b66c471ecb_mischa-frank-6M9OhcblUHM-unsplash%201%20(18).png') center/cover no-repeat;
//   position: relative; /* allows absolute positioning for navbar */
//   z-index: 0;
// }
// .hero::after {
//   content: "";
//   position: absolute;
//   inset: 0;
//   background: rgba(0,0,0,0.35);
// }

// .hero-content h1,
// .hero-content p {
//   color: #fff !important;
//   text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.6); /* makes text pop */
//   z-index: 2;
//   position: relative;
// }



.hero-banner {
  position: relative;
  min-height: 90vh;
  background-size: cover;
  background-position: center center; /* ✅ Always center the image */
  background-attachment: fixed; /* parallax */
  background-repeat: no-repeat;
  transition: background-image 1s ease-in-out;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
}

@media (max-width: 768px) {
  .hero-banner {
    min-height: 70vh; /* shorter hero for mobile */
    background-position: center top; /* ✅ shift focus upward */
    background-attachment: scroll; /* ⚡ fix for iOS (no parallax) */
  }
}


.hero-banner .overlay {
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, 0.45); /* darken for better text contrast */
  z-index: 1;
}

.hero-banner .container {
  position: relative;
  z-index: 2;
}

.hero-banner h1,
.hero-banner p {
  color: #fff;
}

.hero-banner button {
  background-color: #0aeec8;
  border: none;
  border-radius: 25px;
  padding: 0.6rem 1.5rem;
  transition: transform 0.3s ease, background 0.3s ease;
}

.hero-banner button:hover {
  background-color: #08c9aa;
  transform: translateY(-3px);
}









/* Navbar overlaying hero at top */
.navbar-custom {
  position: fixed; /* on top of hero */
  top: 0;
  left: 0;
  right: 0;
  z-index: 3000;
  transition: background-color 0.25s ease, box-shadow 0.25s ease;
  background-color: transparent;
}
.navbar-custom.nav-scrolled {
  position: fixed; /* when scrolling, fix it at top */
  background-color: #ffffff !important;
  box-shadow: 0 6px 18px rgba(231, 216, 216, 0.08);
}
.navbar-custom.nav-top .navbar-brand,
.navbar-custom.nav-top .nav-link {
  color: #070707 !important;
}
.navbar-custom.nav-scrolled .navbar-brand,
.navbar-custom.nav-scrolled .nav-link {
  color: #212529 !important;
}

.navbar-custom .btn-all {
  background-color: #0aeec8;
  color: #fff; /* white text */
  border: none;
  border-radius: 20px; /* makes edges rounded */
  padding: 0.345rem 0.75rem; /* optional: adjust size */
  transition: background-color 0.25s ease, transform 0.2s ease;
  text-decoration: none;
}

.navbar-custom .btn-allhover {
  background-color: #a3028e; /* slightly darker on hover */
  color: #fff;
  transform: translateY(-2px); /* optional subtle lift effect */
}

// ----------------------------------------------------------------------
// body --> Home

    .arrow-section {
    position: relative;
    background: #f8f9fa; /* light bg to stand out */
  }

  .arrow-right {
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    align-items: center;
  }

  .arrow-line {
    width: 200px; /* length of arrow shaft */
    height: 4px;
    background-color: #0aeec8;
  }

  .arrow-head {
    width: 0;
    height: 0;
    border-left: 20px solid #0aeec8;
    border-top: 10px solid transparent;
    border-bottom: 10px solid transparent;
  }

    .btn {
        background-color: #329c8b;
    }

  .bg-section {
  background: url("https://plus.unsplash.com/premium_photo-1682145327489-c84344d98779?q=80&w=1740&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D") center center / cover no-repeat;
  background-attachment: fixed; /* makes background stay while scrolling */
  position: relative;
}

.bg-overlay {
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, 0.4); /* dark overlay */
  z-index: 1; /* stays under content */
}

.bg-content {
  position: relative;
  z-index: 2; /* ensures text & cards are above overlay */
}

.card-img-top {
  object-fit: cover;
  max-height: 420px;
}

@media (max-width: 768px) {
  .card-img-top {
    max-height: 150px;
  }
}

// -------------------------------Leading the way-----------------------------------------------------------------


.feature-section-home {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 7rem 4%;
  gap: 3rem;
  padding-bottom: 12rem;
  
}

.feature-left-home {
  display: flex;
  align-items: center;
  position: relative;
}

.blue-box-home {
background-color: #091652;
  width: 100%;
  max-width: 610px;
  height: auto;
  aspect-ratio: 1/1; /* keeps square shape */
  border-radius: 16px;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  
}

/* IMAGES */
// .feature-img {
//   position: absolute;
//   border-radius: 14px;
//   box-shadow: 0 6px 16px rgba(184, 44, 44, 0.15);
//   object-fit: cover;
//   transition: transform 0.3s ease;
// }

.img-large {
  // width: 340px;
  // height: 340px;
  // top: -40px;
  // left: 40%;
  // transform: translateX(-40%);
  width: 60%;
  height: auto;
  top: -40px;
  left: 50%;
  transform: translateX(-50%);
}

.img-small {
  bottom: 15%;
  left: 5%;
  z-index: 3;
}

.img-bottom-left {
  width: 280px;
  height: 280px;
  bottom: 8rem;
  left: 28rem;
  z-index: 3;
}

.img-bottom-right {
  width: 280px;
  height: 280px;
  bottom: -15px;
  right: 11rem;
}

/* --------------------------------LINE BESIDE BOX - HOME------------------*/
.horizontal-line-home,
.vertical-line-home,
.horizontal-line-2 {
  width: 0;
  height: 0;
}

/* Animate only when .animate class is present */
/* Horizontal top line */
.line-container.animate .horizontal-line-home {
  position: absolute;
  top: 5%;
  left: 0;
  height: 6px;
  background: #0aeec8;
  animation: drawHorizontal 2s ease-out forwards;
  width: 0;
}

/* Vertical line */
.line-container.animate .vertical-line-home {
  position: absolute;
  top: 5%;
  left: 85%;
  width: 6px;
  background: #0aeec8;
  animation: drawVertical 1.5s ease-out forwards;
  animation-delay: 2s;
  height: 0;
}

/* Bottom horizontal line */
.line-container.animate .horizontal-line-2-home {
  position: absolute;
  bottom: 15%;   /* instead of hardcoded 390px */
  right: 10%;    /* responsive */
  height: 6px;
  background: #0aeec8;
  animation: drawHorizontal2 2s ease-out forwards;
  animation-delay: 3.5s;
  width: 0;
}

/* Animations */
@keyframes drawHorizontal {
  from { width: 0; }
  to   { width: 85%; }
}
@keyframes drawVertical {
  from { height: 0; }
  to   { height: 80%; }
} 
@keyframes drawHorizontal2 {
  from { width: 0; }
  to   { width: 90%; }
}


// ------------------end of deco lines


.feature-right {
  max-width: 600px;
}

.feature-right h2 {
  font-size: 2rem;
  margin-bottom: 2rem;
}

.feature-right p {
  font-size: 1.1rem;
  margin-bottom: 1.5rem;
  color: #3f3f3f;
}

.btn-primary {
  background-color: #0aeec8;
  color: #ffffff;
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: 25px;
  font-weight: 600;
  cursor: pointer;
  transition: background-color 0.25s ease, transform 0.2s ease;
  
}

.btn-primary:hover {
  background-color: rgb(129, 2, 129); 
  transform: translateY(-2px);
}



// -----------footer line --------------------

.footer-line-slant-2 {
  position: absolute;
  bottom: 36rem;   /* adjust spacing from footer bottom */
  left: 70rem;     /* adjust spacing from footer left */
  width: 300px;   /* length of line */
  height: 6px;    /* thickness */
  background-color: #0aeec8; /* same accent color */
  transform: rotate(-26deg); /* slant effect (\ shape) */
  transform-origin: left center; /* pivot from left */
  animation: drawVerticalFooter2 1.5s ease-out forwards;
}

.footer-line-slant-1 {
  position: absolute;
  bottom: 44.2rem;   /* adjust spacing from footer bottom */
  left: 86.8rem;     /* adjust spacing from footer left */
  width: 304px;   /* length of line */
  height: 6px;    /* thickness */
  background-color: #0aeec8; /* same accent color */
  transform: rotate(26deg); /* slant effect (\ shape) */
  transform-origin: left center; /* pivot from left */
  animation: drawHorizontal-about 3s ease-out forwards; 
  animation-delay: 1.5s;
}

@keyframes drawVerticalFooter2 {
  from { width: 0; }
  to   { width: 300px; }
}











// -------------------About_------------------------------

/* --- Blue box / images --- */
.blue-box-about {
  background-color: #0aeec8;
  overflow: visible;
  /* no fixed height so the box expands naturally with images + line-wrapper */
  // position: absolute;
  border-radius: 16px;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: visible;
  width: 610px;
  height: 610px;
}
  // background-color: #091652;
  // width: 610px;
  // height: 610px;
  // position: relative;
  // border-radius: 16px;
  // display: flex;
  // justify-content: center;
  // align-items: center;
  // overflow: visible;

/* image sizes - responsive */
.img-large-about {
  width: 80%;
  height: 80px;
  top: -10px;
  left: 20%;
  object-fit: cover;
  border-radius: 8px;
  transform: translateY(-73%);

  // width: 380px;
  // height: 380px;
  // top: -10px;
  // left: 0%;
  // transform: translateX(-50%);

}

.img-medium-about {
  width: 100%;
  height: 120px;
  top: -70px;
  left: 40%;
  // object-fit: cover;
  border-radius: 8px;
  // width: 180px;
  // height: 100px;
  // transform: translateX(-50%);
   position: absolute;
  border-radius: 14px;
  box-shadow: 0 6px 16px rgba(184, 44, 44, 0.15);
  object-fit: cover;
}

.img-small-about {
  width: 80%;
  height: 120px;
  top: -10px;
  left: 40%;
  // object-fit: cover;
 position: absolute;
  border-radius: 14px;
  box-shadow: 0 6px 16px rgba(184, 44, 44, 0.15);
  object-fit: cover;  // border-radius: 8px;
  // width: 180px;
  // height: 100px;
  // transform: translateX(-50%);
}


/* Adds a subtle shadow to images */
.blue-box-about img {
  box-shadow: 0 8px 28px rgba(0,0,0,0.12);
}

/* --- Line wrapper reserves space so the blue box includes it in flow --- */
.line-wrapper-about {
  position: relative;
  width: 100%;
  height: 160px; /* reserve height for the animated path */
  overflow: visible;
}

/* container that holds the three animated segments */
.line-container-about {
  position: absolute;
  top: 10px;
  left: 10px;
  right: 10px;
  height: calc(100% - 20px);
  pointer-events: none;
}

/* base (hidden) states for segments */
.horizontal-line-about,
.vertical-line-about,
.horizontal-line-about-2 {
  background: rgba(119, 9, 101, 0.95);
  position: absolute;
  border-radius: 6px;
}

/* First horizontal: starts from left, grows right */
.horizontal-line-about {
  top: 8px;         /* vertical offset inside wrapper */
  left: 1px;
  height: 4px;
  width: 0;
}

/* Vertical: will appear at 75% from left of container */
.vertical-line-about {
  top: 8px;
  left: 76%;        /* adjust this percent to control where the vertical drops */
  width: 4px;
  height: 0;
  transform: translateX(-50%);
}

/* Second horizontal: positioned at bottom of vertical and grows leftwards */
.horizontal-line-about-2 {
  /* bottom position is set using the vertical final height; set top to match vertical final */
  top: calc(8px + 380px); /* 120px is the vertical drop in this CSS — keep in sync */
  right: 23.8%;
  height: 4px;
  width: 0;
  transform-origin: right center; /* will expand leftwards */
}

/* --- ANIMATIONS: run only when wrapper has .animate --- */
.line-wrapper.animate .horizontal-line-about {
  animation: drawHorizontal-about 1s ease-out forwards;
}

.line-wrapper.animate .vertical-line-about {
  animation: drawVertical-about 0.9s ease-out forwards;
  animation-delay: 1.05s;
}

.line-wrapper.animate .horizontal-line-about-2 {
  animation: drawHorizontal2-about 1s ease-out forwards;
  animation-delay: 2.05s;
}

/* Keyframes */
@keyframes drawHorizontal-about  {
  from { width: 0; }
  to   { width: 76%; } /* matches the left:75% used on vertical */
}
@keyframes drawVertical-about {
  from { height: 0; }
  to   { height: 380px; } /* final vertical drop (keep in sync with top of horizontal-line-2) */
}
@keyframes drawHorizontal2-about {
  from { width: 0; }
  to   { width: 76%; } /* expands leftwards since transform-origin is right */
}

/* --- Right-side text and button --- */
.custom-btn {
  background-color: #0aeec8;
  color: #fff;
  border: none;
  border-radius: 25px;
  padding: 0.6rem 1.3rem;
  transition: background-color 0.25s ease, transform .15s ease;
}
.custom-btn:hover {
  background-color: rgb(129, 2, 129);
  transform: translateY(-3px);
}

/* Small screen tweaks */
@media (max-width: 767.98px) {
  .img-large { height: 180px; }
  .img-small { height: 100px; }
  .line-wrapper { height: 120px; }
  .vertical-line { left: 72%; }
  .line-wrapper.animate .horizontal-line { animation-duration: .9s; }
  .line-wrapper.animate .vertical-line { animation-delay: 1s; animation-duration: .8s; }
  .line-wrapper.animate .horizontal-line-2 { animation-delay: 1.9s; }
}

.teamup-section {
  background: url("https://plus.unsplash.com/premium_photo-1682145327489-c84344d98779?q=80&w=1740&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D") no-repeat center center;
  background-size: cover;
  background-attachment: fixed; /* makes it stay while scrolling */
  position: relative;
  color: #fff;
}

/* Optional: dark overlay to improve text readability */
.teamup-section::before {
  content: "";
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, 0.5); /* semi-transparent black */
  z-index: 1;
}

.teamup-section .container {
  position: relative;
  z-index: 2; /* put content above overlay */
}

/* Staggering classes */
.stagger-up {
  transform: translateY(-20px);
}

.stagger-down {
  transform: translateY(20px);
}

@media (max-width: 991.98px) {
  /* On smaller screens, remove staggering so layout stacks cleanly */
  .stagger-up,
  .stagger-down {
    transform: none;
  }
}



// -------------------Products -----------------------

.parallax-section::after {
  content: "";
  position: absolute;
  inset: 0;
  background: rgba(0,0,0,0.35);
  z-index: 0;
}
.parallax-section > .container {
  position: relative;
  z-index: 1;
}


// --------------------tech-------------------\\

/* Container row */
.reveal-row {
  gap: 0;
  overflow: hidden;
  height: 580px;               /* adjust desired height */
  align-items: stretch;
}

/* Individual panel (sliver default) */
.panel {
  flex: 0.12;                  /* default tiny width (4 panels: 0.12*4 = 0.48) */
  min-width: 60px;
  height: 100%;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  transition: flex 0.65s cubic-bezier(.2,.8,.2,1),
              transform 0.5s ease,
              box-shadow 0.35s ease;
  position: relative;
  cursor: pointer;
  border-radius: 6px 0 0 6px;  /* small rounding - visual */
  overflow: hidden;
  box-shadow: inset 0 0 0 rgba(0,0,0,0.0);
}

/* When hovered or focused - expand big */
.panel:hover,
.panel:focus {
  outline: none;
  flex: 0.64;                  /* expanded portion (should sum to ~1.0) */
  transform: translateX(-8px) scale(1.02); /* slight left slide & scale */
  box-shadow: 0 12px 30px rgba(10,238,200,0.12);
  z-index: 5;                  /* bring above neighbours */
}

/* overlay inside panel (dark gradient to improve readability) */
.panel-overlay {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: flex-end;
  justify-content: flex-start;
  background: linear-gradient(to top, rgba(0,0,0,0.55) 0%, rgba(0,0,0,0.12) 40%, rgba(0,0,0,0) 100%);
  padding: 18px;
  color: #fff;
  pointer-events: none;
}

/* big faint number (corner) */
.panel-number {
  position: absolute;
  left: 18px;
  top: 16px;
  font-size: 56px;
  font-weight: 700;
  color: rgba(255,255,255,0.18);
  letter-spacing: 2px;
  transition: opacity 0.4s ease, transform 0.4s ease;
  transform: translateX(0);
}

/* content hidden until expanded */
.panel-content {
  opacity: 0;
  transform: translateX(16px);
  transition: opacity 0.35s ease 0.12s, transform 0.35s ease 0.12s;
  pointer-events: none;
}

/* show content & number more prominently when panel is active */
.panel:hover .panel-content,
.panel:focus .panel-content {
  opacity: 1;
  transform: translateX(0);
  pointer-events: auto;
}

.panel:hover .panel-number,
.panel:focus .panel-number {
  color: rgba(255,255,255,0.28);
  transform: translateX(-6px);
}

/* small caption style */
.panel-content h5 {
  margin: 0;
  font-size: 1.05rem;
  font-weight: 700;
}

.panel-content p {
  margin: 0;
  color: rgba(255,255,255,0.92);
  opacity: 0.95;
}

/* keyboard focus style (visible) */
.panel:focus {
  box-shadow: 0 12px 30px rgba(10,238,200,0.14), 0 0 0 4px rgba(10,238,200,0.08);
}

/* make sure adjacent panels have no gap and look flush */
.reveal-row .panel + .panel {
  margin-left: -2px; /* tiny overlap to avoid hairline gap on some browsers */
}

/* MOBILE: stack panels normally for a usable UX */
@media (max-width: 767.98px) {
  .reveal-row {
    flex-direction: column;
    height: auto;
  }
  .panel {
    flex: none;
    width: 100%;
    min-width: auto;
    height: 200px;
    transform: none !important;
    margin-left: 0;
    border-radius: 8px;
  }
  .panel-number { font-size: 34px; top: 12px; left: 12px; }
  .panel-overlay { align-items: flex-end; padding: 12px; }
  .panel-content { opacity: 1; transform: none; } /* show content on mobile */
}



// --------------------------------------------------------------------
// ----------------------
// Hexagon styling - editable variables
// --
// teamup-section.scss
// Full SCSS for the TeamUp section (images + hexagon SVG lines + glow)

/* -------------------------
   Config / variables
   ------------------------- */
$hex-color: #0aeec8;
$hex-stroke: 3px;
$hex-width: 200px;      // visual size of the SVG (adjust scale)
$hex-right: 5%;         // horizontal offset from right
$hex-bottom: 10%;       // vertical offset from bottom
$dash-length: 260;      // stroke-dasharray/dashoffset (adjust if you scale hex-size)
$draw-duration: 0.9s;
$draw-ease: cubic-bezier(.2,.8,.2,1);
$glow-duration: 3s;

/* -------------------------
   TeamUp section base
   ------------------------- */
.teamup-section {
  position: relative;
  overflow: visible;
  // keep main content above the svg
  .container {
    position: relative;
    z-index: 2;
  }

  // Typography / colours (section is text-white in markup, but allow overrides)
  color: #fff;

  // Images grid (right column)
  .image-grid {
    position: relative;
    // remove gaps between images (Bootstrap grid handles spacing)
    > .col-6 {
      padding-left: 0.5rem;
      padding-right: 0.5rem;
    }
  }

  .stagger-up {
    display: block;
    transform: translateY(-18px);
    transition: transform 350ms ease;
  }

  .stagger-down {
    display: block;
    transform: translateY(18px);
    transition: transform 350ms ease;
  }

  // hover/focus animation to slightly lift images
  .image-grid img {
    width: 100%;
    height: auto;
    display: block;
    transition: transform 360ms ease, box-shadow 360ms ease;
    will-change: transform;
    backface-visibility: hidden;
  }

  .image-grid img:hover,
  .image-grid img:focus {
    transform: translateY(0) scale(1.02);
    box-shadow: 0 10px 30px rgba(0,0,0,0.18);
  }

  // remove the vertical offset on smaller screens for better stacking
  @media (max-width: 991.98px) {
    .stagger-up,
    .stagger-down {
      transform: none !important;
    }
    .image-grid img { transform: none !important; }
  }
}

/* -------------------------
   Hexagon SVG and per-line control
   ------------------------- */
/* The SVG we use should be inserted as:
   <svg className="hexagon-svg" viewBox="0 0 200 200"> ... </svg>
   with six <path className="hex-line-N" d="..."/> children.
*/
.hexagon-svg {
  position: absolute;
  width: $hex-width;
  height: $hex-width;
  right: $hex-right;
  bottom: $hex-bottom;
  z-index: 1;               // under the content (container has z-index:2)
  pointer-events: none;
  overflow: visible;
  transform-origin: center center;

  // responsive scale-down
  @media (max-width: 768px) {
    width: ($hex-width * 0.7);
    height: ($hex-width * 0.7);
    right: 6%;
    bottom: 8%;
  }

  // default appearance for each edge
  path {
    fill: none;
    stroke: $hex-color;
    stroke-width: $hex-stroke;
    stroke-linecap: round;
    stroke-linejoin: round;
    vector-effect: non-scaling-stroke;  // keeps stroke width even on scaling
    stroke-dasharray: $dash-length;
    stroke-dashoffset: $dash-length;
    opacity: 0;
    // initial subtle glow (will be enhanced by the animation)
    filter: drop-shadow(0 0 3px rgba($hex-color, 0.08));
  }

  // ---------- individual edges (so you can tweak each separately) ----------
  // Each edge runs the draw animation (stroke reveal) and then runs the
  // glow/pulse animation repeatedly (the glow start is delayed slightly).
  .hex-line-1 {
    // P1 -> P2 (top-right slant)
    animation: hex-draw $draw-duration $draw-ease forwards,
               hex-glow $glow-duration ease-in-out infinite ($draw-duration + 0.1s);
    animation-delay: 0s, ($draw-duration + 0.1s);
  }
  .hex-line-2 {
    // P2 -> P3 (right-bottom)
    animation: hex-draw $draw-duration $draw-ease forwards,
               hex-glow $glow-duration ease-in-out infinite ($draw-duration + 0.18s);
    animation-delay: 0.08s, ($draw-duration + 0.18s);
  }
  .hex-line-3 {
    // P3 -> P4 (bottom-right slant)
    animation: hex-draw $draw-duration $draw-ease forwards,
               hex-glow $glow-duration ease-in-out infinite ($draw-duration + 0.26s);
    animation-delay: 0.16s, ($draw-duration + 0.26s);
  }
  .hex-line-4 {
    // P4 -> P5 (bottom-left slant)
    animation: hex-draw $draw-duration $draw-ease forwards,
               hex-glow $glow-duration ease-in-out infinite ($draw-duration + 0.34s);
    animation-delay: 0.24s, ($draw-duration + 0.34s);
  }
  .hex-line-5 {
    // P5 -> P6 (left-top)
    animation: hex-draw $draw-duration $draw-ease forwards,
               hex-glow $glow-duration ease-in-out infinite ($draw-duration + 0.42s);
    animation-delay: 0.32s, ($draw-duration + 0.42s);
  }
  .hex-line-6 {
    // P6 -> P1 (top-left slant)
    animation: hex-draw $draw-duration $draw-ease forwards,
               hex-glow $glow-duration ease-in-out infinite ($draw-duration + 0.5s);
    animation-delay: 0.40s, ($draw-duration + 0.5s);
  }
}

/* -------------------------
   Animations
   ------------------------- */
/* stroke draw (reveals the dash) */
@keyframes hex-draw {
  0% {
    stroke-dashoffset: $dash-length;
    opacity: 0;
  }
  30% {
    opacity: 0.9;
  }
  100% {
    stroke-dashoffset: 0;
    opacity: 1;
  }
}

/* glow/pulse (continuous after the draw) */
@keyframes hex-glow {
  0%, 100% {
    filter: drop-shadow(0 0 4px rgba($hex-color, 0.12));
    opacity: 0.9;
  }
  50% {
    filter: drop-shadow(0 0 16px rgba($hex-color, 0.30));
    opacity: 1;
  }
}

/* -------------------------
   Helpful utilities / overrides
   ------------------------- */
/* You might want the hex to be behind images; ensure images / text have higher z-index */
.teamup-section .image-grid,
.teamup-section h2,
.teamup-section p {
  position: relative;
  z-index: 3;
}

/* If you want to manually trigger the animation only when section becomes visible:
   add `.play-hex` to `.hexagon-svg` (JS: intersectionObserver -> add class "play-hex")
   and change the above .hex-line-N animations to run only when .hexagon-svg.play-hex path { ... }
   I left animations as auto-run (they start on load) but you can wire them to play on scroll. */

/* -------------------------
   Notes:
   - If you scale $hex-width a lot, increase $dash-length to match actual edge length.
     A quick heuristic: for a flat-top hexagon with width W, each edge ≈ (W * 0.42).
     So dash-length ≈ edge_length (e.g. if W=200, edge≈84 → dash ≈ 84). We use larger value
     to be safe; tweak $dash-length so the draw is smooth (no visual snapping).
   - To stop the glow after some time, remove the infinite keyword from hex-glow animations.
   - To change glow color or intensity, adjust rgba($hex-color, X) values in keyframes.
*/



